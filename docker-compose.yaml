version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: zoo1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
    - ./zk-single-kafka-single/zoo1/data:/data
    - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
    - vehicle-position-default

  kafka1:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka1
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    networks:
    - vehicle-position-default
    depends_on:
    - zoo1

  cassandra1:
    image: cassandra:3.11.3
    hostname: cassandra1
    ports:
    - "9042:9042"
    environment:
      CASSANDRA_TRANSPORT_PORT_NUMBER: 7000
    networks:
    - vehicle-position-default

  vehicle-position-api:
    image: org/jychen:0.0.1-SNAPSHOT
    hostname: vehicle-position-api
    ports:
    - "28080:28080"
    networks:
    - vehicle-position-default

  prune:
    image: docker
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
    - DELAY=1d
    command: ['sh', '-c', 'while true; do sleep 86400; docker system prune --all --force; echo "Finished system prune"; done']

networks:
  vehicle-position-default:
    name: vehicle-position-default